const canvas = document.getElementById("snow");
const ctx = canvas.getContext("2d");
canvas.width = window.innerWidth;
canvas.height = window.innerHeight;

// T·∫°o c√°c b√¥ng tuy·∫øt
const snowflakes = Array.from({ length: 150 }).map(() => ({
  x: Math.random() * canvas.width,
  y: Math.random() * canvas.height,
  radius: Math.random() * 3 + 2, // K√≠ch th∆∞·ªõc b√¥ng tuy·∫øt
  speed: Math.random() * 3 + 1,
  angle: Math.random() * Math.PI * 2, // G√≥c quay
  opacity: Math.random() * 0.8 + 0.2, // ƒê·ªô trong su·ªët
}));

// H√†m v·∫Ω b√¥ng tuy·∫øt 6 c√°nh
function drawSnowflake(flake) {
  ctx.save();
  ctx.translate(flake.x, flake.y);
  ctx.rotate(flake.angle);
  ctx.globalAlpha = flake.opacity;

  ctx.strokeStyle = "white";
  ctx.lineWidth = 1.5;

  // V·∫Ω 6 c√°nh
  for (let i = 0; i < 6; i++) {
    ctx.beginPath();
    ctx.moveTo(0, 0);
    ctx.lineTo(0, -flake.radius); // V·∫Ω ƒë∆∞·ªùng th·∫≥ng t·ª´ t√¢m ra ngo√†i
    ctx.stroke();

    ctx.beginPath();
    ctx.moveTo(0, -flake.radius * 0.6);
    ctx.lineTo(-flake.radius * 0.2, -flake.radius * 0.8); // Nh√°nh ph·ª• b√™n tr√°i
    ctx.moveTo(0, -flake.radius * 0.6);
    ctx.lineTo(flake.radius * 0.2, -flake.radius * 0.8); // Nh√°nh ph·ª• b√™n ph·∫£i
    ctx.stroke();

    ctx.rotate((Math.PI * 2) / 6); // Xoay ƒë·ªÉ v·∫Ω c√°nh ti·∫øp theo
  }

  ctx.restore();
}

// H√†m v·∫Ω t·∫•t c·∫£ b√¥ng tuy·∫øt
function drawSnowflakes() {
  ctx.clearRect(0, 0, canvas.width, canvas.height);

  snowflakes.forEach((flake) => {
    drawSnowflake(flake);
  });
}

// C·∫≠p nh·∫≠t v·ªã tr√≠ v√† g√≥c quay c·ªßa b√¥ng tuy·∫øt
function updateSnowflakes() {
  snowflakes.forEach((flake) => {
    flake.y += flake.speed;
    flake.x += Math.sin(flake.y / 50) * 1; // Hi·ªáu ·ª©ng tr√¥i ngang
    flake.angle += 0.01; // Xoay nh·∫π b√¥ng tuy·∫øt

    if (flake.y > canvas.height) {
      flake.y = -flake.radius;
      flake.x = Math.random() * canvas.width;
    }
  });
}

// H√†m ho·∫°t ·∫£nh
function animateSnow() {
  drawSnowflakes();
  updateSnowflakes();
  requestAnimationFrame(animateSnow);
}

animateSnow();

// Th√™m √¢m thanh g√µ ph√≠m
const keySound = new Audio("key-press-sound.mp3");

// Ph√°t nh·∫°c Gi√°ng Sinh
const audio = new Audio("love-is-official-mv.mp3"); // Thay b·∫±ng ƒë∆∞·ªùng d·∫´n ch√≠nh x√°c
audio.loop = true;
audio.volume = 0.5; // √Çm l∆∞·ª£ng 50%

// T·ª± ƒë·ªông ph√°t nh·∫°c sau khi trang t·∫£i xong
window.addEventListener("DOMContentLoaded", () => {
  const playMusicButton = document.createElement("button");
  playMusicButton.textContent = "üéµ";

  // Thi·∫øt l·∫≠p v·ªã tr√≠ v√† ki·ªÉu d√°ng
  playMusicButton.style.position = "fixed";
  playMusicButton.style.bottom = "10px";
  playMusicButton.style.left = "50%";
  playMusicButton.style.transform = "translateX(-50%)";
  playMusicButton.style.padding = "15px 25px";
  playMusicButton.style.fontSize = "1.5rem";
  playMusicButton.style.color = "#fff";
  playMusicButton.style.backgroundColor = "#fff"; // M√†u cam ƒë·∫≠m ƒë·ªÉ n·ªïi b·∫≠t
  playMusicButton.style.border = "none";
  playMusicButton.style.borderRadius = "50%"; // N√∫t h√¨nh tr√≤n ƒë·ªÉ th√™m ph·∫ßn m·ªÅm m·∫°i
  playMusicButton.style.cursor = "pointer";
  playMusicButton.style.boxShadow = "0 8px 20px rgba(255, 99, 71, 0.7)"; // √Ånh s√°ng m·ªÅm m·∫°i
  playMusicButton.style.transition = "transform 0.3s, box-shadow 0.3s"; // Hi·ªáu ·ª©ng chuy·ªÉn ƒë·ªông

  // Hi·ªáu ·ª©ng hover khi di chu·ªôt v√†o n√∫t
  playMusicButton.addEventListener("mouseover", () => {
    playMusicButton.style.transform = "scale(1.1)"; // Ph√≥ng to n√∫t
    playMusicButton.style.boxShadow = "0 15px 25px rgba(255, 99, 71, 0.9)"; // T·∫°o hi·ªáu ·ª©ng b√≥ng m∆∞·ª£t
  });

  // Hi·ªáu ·ª©ng khi di chu·ªôt ra kh·ªèi n√∫t
  playMusicButton.addEventListener("mouseleave", () => {
    playMusicButton.style.transform = "scale(1)"; // Tr·ªü l·∫°i k√≠ch th∆∞·ªõc ban ƒë·∫ßu
    playMusicButton.style.boxShadow = "0 8px 20px rgba(255, 99, 71, 0.7)"; // Tr·ªü l·∫°i b√≥ng g·ªëc
  });

  playMusicButton.addEventListener("click", () => {
    audio
      .play()
      .then(() => {
        playMusicButton.style.display = "none"; // ·∫®n n√∫t sau khi nh·∫°c ph√°t
      })
      .catch((error) => {
        console.error("Error playing audio:", error);
      });
  });

  document.body.appendChild(playMusicButton);
});

// L·∫•y c√°c ph·∫ßn t·ª≠ HTML
const treeImage = document.querySelector(".tree img");
const modal = document.getElementById("wish-modal");
const closeModal = document.getElementById("close-modal");
const wishMessage = document.getElementById("wish-message");

// L·ªùi ch√∫c
const message =
  "‚ùÑÔ∏è Cu·ªëi c√πng, m√πa Gi√°ng sinh nƒÉm nay c≈©ng ƒë√£ v·ªÅ ‚ùÑÔ∏è ƒê√¢y l√† l·∫ßn ƒë·∫ßu ti√™n, nh∆∞ng kh√¥ng bi·∫øt c√≥ ph·∫£i l√† l·∫ßn cu·ªëi c√πng hay kh√¥ng ‚ùÑÔ∏è Bi·∫øt l√† em s·∫Ω kh√¥ng th√≠ch n√™n anh xin l·ªói tr∆∞·ªõc nh√©, nh∆∞ng m√† k·ªá h√¨ ü•π (Ng·∫°i c·ª±c nh∆∞ng k·ªá) Lu√¥n gi·ªØ g√¨n s·ª©c kh·ªèe, ƒë·ª´ng ƒë·ªÉ b·ªánh l√†m phi·ªÅn em, ƒë·∫∑c bi·ªát l√† trong nh·ªØng d·ªãp quan tr·ªçng nh∆∞ th·∫ø n√†y. Mong em lu√¥n kh·ªèe m·∫°nh v√† ƒë·ª´ng qu√™n r·∫±ng qua ng√†y l·ªÖ v√† T·∫øt d∆∞∆°ng n√†y, s·∫Ω c√≥ nh·ªØng b√†i ki·ªÉm tra ch·ªù ƒë·ª£i em ph√≠a tr∆∞·ªõc ü•π Thi t·ªët nh√© ü•π Anh ch√∫c em m·ªôt Gi√°ng sinh an l√†nh, tr√†n ng·∫≠p ni·ªÅm vui v√† h·∫°nh ph√∫c. Hy v·ªçng m√πa ƒë√¥ng n√†y tuy l·∫°nh nh∆∞ng s·∫Ω mang ƒë·∫øn cho em nh·ªØng kho·∫£nh kh·∫Øc ng·ªçt ng√†o, ·∫•m √°p. üéÑüéÖ‚ú®‚ùÑÔ∏èüéÅ";

// Hi·ªÉn th·ªã modal khi click v√†o ·∫£nh
treeImage.addEventListener("click", () => {
  wishMessage.textContent = ""; // X√≥a n·ªôi dung c≈©
  modal.style.display = "block";
  let i = 0;

  // ·∫®n n√∫t ƒë√≥ng modal khi b·∫Øt ƒë·∫ßu ch·∫°y ch·ªØ
  closeModal.style.display = "none";

  // Hi·ªáu ·ª©ng ch·∫°y ch·ªØ
  const typingEffect = setInterval(() => {
    if (i < message.length) {
      wishMessage.textContent += message.charAt(i);
      keySound.play(); // Ph√°t √¢m thanh g√µ ph√≠m
      i++;
    } else {
      clearInterval(typingEffect); // D·ª´ng hi·ªáu ·ª©ng sau khi ch·∫°y xong
      closeModal.style.display = "block"; // Hi·ªÉn th·ªã n√∫t ƒë√≥ng modal khi hi·ªáu ·ª©ng ho√†n t·∫•t

      // D·ª´ng nh·∫°c g√µ ph√≠m sau khi ch·∫°y xong
      keySound.pause();
      keySound.currentTime = 0;
    }
  }, 100); // T·ªëc ƒë·ªô ch·∫°y ch·ªØ
});

// ƒê√≥ng modal
closeModal.addEventListener("click", () => {
  modal.style.display = "none";
});
